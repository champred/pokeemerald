#!/usr/bin/node

const fs = require('fs');

// Sample array of elements
const dataArray = [
	"None",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Special",
	"Status",
	"Physical",
	"Special",
	"Physical",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Physical",
	"Status",
	"Status",
	"Status",
	"Status",
	"Special",
	"Status",
	"Special",
	"Special",
	"Special",
	"Status",
	"Special",
	"Special",
	"Special",
	"Special",
	"Special",
	"Special",
	"Special",
	"Special",
	"Special",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Special",
	"Special",
	"Status",
	"Status",
	"Physical",
	"Special",
	"Status",
	"Status",
	"Status",
	"Special",
	"Status",
	"Special",
	"Special",
	"Special",
	"Special",
	"Status",
	"Special",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Special",
	"Special",
	"Status",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Status",
	"Special",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Physical",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Special",
	"Special",
	"Physical",
	"Special",
	"Physical",
	"Physical",
	"Special",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Status",
	"Physical",
	"Status",
	"Special",
	"Status",
	"Physical",
	"Physical",
	"Status",
	"Physical",
	"Status",
	"Special",
	"Physical",
	"Status",
	"Status",
	"Special",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Special",
	"Physical",
	"Physical",
	"Status",
	"Physical",
	"Status",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Status",
	"Physical",
	"Special",
	"Status",
	"Physical",
	"Status",
	"Special",
	"Status",
	"Physical",
	"Status",
	"Special",
	"Status",
	"Physical",
	"Status",
	"Physical",
	"Status",
	"Status",
	"Special",
	"Special",
	"Special",
	"Status",
	"Special",
	"Status",
	"Status",
	"Status",
	"Special",
	"Status",
	"Physical",
	"Status",
	"Physical",
	"Status",
	"Special",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Physical",
	"Special",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Status",
	"Special",
	"Physical",
	"Special",
	"Status",
	"Status",
	"Physical",
	"Special",
	"Status",
	"Physical",
	"Special",
	"Special",
	"Special",
	"Physical",
	"Special",
	"Physical",
	"Physical",
	"Special",
	"Status",
	"Special",
	"Status",
	"Special",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Physical",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Status",
	"Physical",
	"Physical",
	"Special",
	"Status",
	"Status",
	"Status",
	"Status",
	"Status",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Special",
	"Special",
	"Status",
	"Status",
	"Physical",
	"Status",
	"Physical",
	"Physical",
	"Status",
	"Special",
	"Physical",
	"Physical",
	"Special",
	"Special",
	"Physical",
	"Physical",
	"Special",
	"Status",
	"Status",
	"Special",
	"Special",
	"Status",
	"Physical",
	"Special",
	"Status",
	"Status",
	"Status",
	"Status",
	"Special",
	"Special",
	"Physical",
	"Special",
	"Physical",
	"Physical",
	"Special",
	"Special",
	"Physical",
	"Physical",
	"Physical",
	"Status",
	"Status",
	"Status",
	"Physical",
	"Special",
	"Status",
	"Physical",
	"Special",
	"Physical",
	"Physical",
	"Physical",
	"Special",
	"Status",
	"Status",
	"Physical",
	"Status",
	"Physical",
	"Special",
	"Special",
	"Special",
	"Special"
];

(function (array) {
	const fileName = 'src/data/battle_moves.h';
	let lineCount = 0;

	// Read the existing content
	const fileContents = fs.readFileSync(fileName, 'utf8');

	// Open file for writing
	const fileStream = fs.createWriteStream(fileName);

	// Split the content into lines
	const lines = fileContents.split('\n');

	// Write every 13 lines with an array element
	lines.forEach((line) => {
		// Increment the line count
		lineCount++;

		// If 13 lines have been written, write an array element
		if (lineCount === 13 && array.length > 0) {
			const element = array.shift(); // Get the next array element
			let flag='';
			if(element=="Physical")flag=" | FLAG_PHYSICAL";
			else if(element=="Special")flag=" | FLAG_SPECIAL";
			else if(element=="Status")flag=" | FLAG_STATUS";
			fileStream.write(`${line.slice(0,line.indexOf('0'))}${flag.substring((line.indexOf('0')==-1||4)-1)},\n`); // Write the array element
			lineCount = 0; // Reset line count
		}else fileStream.write(`${line}\n`);
	});

	// Close the file stream
	fileStream.end();
})(dataArray);


